package com.boc.cn.Controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.beanutils.PropertyUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.boc.cn.Controller.VO.Product;
import com.boc.cn.Controller.VO.User;
import com.boc.cn.Service.ProductService;
import com.boc.cn.Service.DTO.ProductDTO;
import com.boc.cn.Service.DTO.ProductInfoReqDto;

@Controller
public class LoginController {
	@Autowired
	private ProductService productServiceImpl;

	// 登陆
	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public String login(HttpServletRequest req, ModelMap map) {
		User user = null;
		map.addAttribute("user", user);
		return "login";
	}

	// 展示
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String showIndex(HttpServletRequest req, ModelMap map) {
		HttpSession session = req.getSession();
		String userName = (String) session.getAttribute("userName");
		Integer userType = (Integer) session.getAttribute("userType");
		Integer userId = (Integer) session.getAttribute("userId");
		if (userName != null) {
			User user = new User();
			user.setUsername(userName);
			user.setUsertype(userType);
			map.addAttribute("user", user);
		}
		List<Product> productList = new ArrayList<Product>();
		
		try {
			List<ProductDTO> products = productServiceImpl.getProducts();
			if (products != null) {
				for (ProductDTO productDto : products) {
					Product product = new Product();
					PropertyUtils.copyProperties(product, productDto);
					if(userType != null){
						if (0==userType && userId == productDto.getBuyerId())
							product.setBuy(true);
						if (1 == userType
								&& productDto.getBuyerId() != null)
							product.setSell(true);
					}
					productList.add(product);
				}
			}
		} catch (Exception e) {
			System.out.println("系统异常");
			return "index";
		}
		map.addAttribute("productList", productList);
		return "index";
	}

	// 退出
	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public String logout(HttpServletRequest req, ModelMap map) {
		HttpSession session = req.getSession();
		session.invalidate();
		return "login";
	}

	// 查看
	@RequestMapping(value = "/show", method = RequestMethod.GET)
	public String show(HttpServletRequest req, ModelMap map) {
		HttpSession session = req.getSession();
		String userName = (String) session.getAttribute("userName");
		Integer userType = (Integer) session.getAttribute("userType");
		Integer userId = (Integer) session.getAttribute("userId");
		if (userName != null) {
			User user = new User();
			user.setUsername(userName);
			user.setUsertype(userType);
			map.addAttribute("user", user);
		}
		String id=req.getParameter("id");
		ProductInfoReqDto dto = new ProductInfoReqDto();
		dto.setId(id);
		dto.setUserId(userId);
		dto.setUserType(userType);
		productServiceImpl.getProductInfo(id,userId,userType);
		return "show";
	}

}
